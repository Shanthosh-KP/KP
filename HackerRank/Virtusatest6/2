import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;


class Result {

    /*
     * Complete the 'countPerms' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER n as parameter.
     */

    public static int countPerms(int n) {
    if(n==1)
    return 5;
    long mod = 1000000007L;
    long[] prev = new long[5];
    long[] cur = new long[5];
    long sprev =4;
    for(int j=0;j<5;j++)
    prev[j]=1;
    for(int i=2;i<=n;i++){
        cur[0]=prev[1];
        cur[1]=(prev[0]+prev[2]) % mod;
        cur[2]= sprev;
        cur[3]=(prev[2]+prev[4]) % mod;
        cur[4]=prev[0];
        sprev=0;
        for(int j=0;j<5;j++)
        {
            prev[j]=cur[j];
            if(j!=2)
            sprev=sprev+prev[j];
        }
        sprev = sprev % mod;
    }
    long res=(cur[0]+cur[1]+ cur[2]+ cur[3]+ cur[4]) % mod;
    return (int)res;
}
}
